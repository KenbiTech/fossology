# FOSSology Docker Compose file
# SPDX-FileCopyrightText: © 2016 Siemens AG
# SPDX-FileCopyrightText: © fabio.huser@siemens.com
# SPDX-FileCopyrightText: © 2016-2017 TNG Technology Consulting GmbH
# SPDX-FileCopyrightText: © maximilian.huber@tngtech.com
#
# SPDX-License-Identifier: FSFAP
#
# Description: Recipe for setting up a multi container FOSSology
#              Docker setup with separate Database instance
version: "3.5"
services:
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: fossology
    restart: unless-stopped
    environment:
      - FOSSOLOGY_DB_HOST=<DB_HOST>
      - FOSSOLOGY_DB_NAME=<DB_NAME>
      - FOSSOLOGY_DB_USER=<DB_USER>
      - FOSSOLOGY_DB_PASSWORD=<DB_PASSWORD>
    command: scheduler
    volumes:
      - repository:/srv/fossology/repository/
    healthcheck:
      test: ["CMD-SHELL", "true"]
      interval: 5s
      timeout: 5s
      retries: 2
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: fossology
    restart: unless-stopped
    environment:
      - FOSSOLOGY_DB_HOST=<DB_HOST>
      - FOSSOLOGY_DB_NAME=<DB_NAME>
      - FOSSOLOGY_DB_USER=<DB_USER>
      - FOSSOLOGY_DB_PASSWORD=<DB_PASSWORD>
    command: web
    ports:
      - "8000:80"
    depends_on:
      - scheduler
    volumes:
      - repository:/srv/fossology/repository/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -sSf localhost:8000/repo/api/v1/health | grep -q ''{"status":"OK",'' || exit 1',
        ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  repository:
